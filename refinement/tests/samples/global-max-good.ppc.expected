Expected {expBinaryName = "tests/samples/global-max-good.ppc.exe", expEntryPoints = [EntryPoint (Address {addrSegmentBase = 0, addrSegmentOffset = 268500992, addrSegoffOffset = 100, addrPretty = "0x10010064"}),EntryPoint (Address {addrSegmentBase = 0, addrSegmentOffset = 268500992, addrSegoffOffset = 0, addrPretty = "0x10010000"}),EntryPoint (Address {addrSegmentBase = 0, addrSegmentOffset = 268500992, addrSegoffOffset = 100, addrPretty = "0x10010064"})], expFunctions = [Function (Address {addrSegmentBase = 0, addrSegmentOffset = 268500992, addrSegoffOffset = 0, addrPretty = "0x10010000"}) [Block (Address {addrSegmentBase = 0, addrSegmentOffset = 268500992, addrSegoffOffset = 0, addrPretty = "0x10010000"}) "StatementList {stmtsIdent = 0, stmtsNonterm = [# 0x0 0x10010000: std r3, -16(r1),# 0x10010000: std r3, -16(r1),r59 := (bv_add r1_0 (0xfffffffffffffff0 :: [64])),write_mem r59 r3_0,# 0x10010000: {ip => 0x10010004},# 0x4 0x10010004: std r4, -24(r1),# 0x10010004: std r4, -24(r1),r60 := (bv_add r1_0 (0xffffffffffffffe8 :: [64])),write_mem r60 r4_0,# 0x10010004: {ip => 0x10010008},# 0x8 0x10010008: ld r3, -16(r1),# 0x10010008: ld r3, -16(r1),r61 := (bv_add r1_0 (0xfffffffffffffff0 :: [64])),r62 := read_mem r61 (bvbe 8),# 0x10010008: {r3 => r62\n              ;ip => 0x1001000c},# 0xc 0x1001000c: std r3, -32(r1),# 0x1001000c: std r3, -32(r1),r63 := (bv_add r1_0 (0xffffffffffffffe0 :: [64])),write_mem r63 r62,# 0x1001000c: {ip => 0x10010010},# 0x10 0x10010010: ld r3, -32(r1),# 0x10010010: ld r3, -32(r1),r64 := (bv_add r1_0 (0xffffffffffffffe0 :: [64])),r65 := read_mem r64 (bvbe 8),# 0x10010010: {r3 => r65\n              ;ip => 0x10010014},# 0x14 0x10010014: ld r4, -24(r1),# 0x10010014: ld r4, -24(r1),r66 := (bv_add r1_0 (0xffffffffffffffe8 :: [64])),r67 := read_mem r66 (bvbe 8),# 0x10010014: {r4 => r67\n              ;ip => 0x10010018},# 0x18 0x10010018: cmpd cr0, r3, r4,# 0x10010018: cmpd cr0, r3, r4,r68 := (bv_slt r65 r67),r69 := (bv_slt r67 r65),r70 := (bv_and cr_0 (0xfffffff :: [32])),r71 := (mux r69 (0x2 :: [3]) (0x1 :: [3])),r72 := (mux r68 (0x4 :: [3]) r71),r73 := (bv_shr xer_0 (0x1f :: [64])),r74 := (trunc r73 1),r75 := (uext r72 4),r76 := (uext r74 4),r77 := (bv_shl r75 (0x1 :: [4])),r78 := (bv_or r77 r76),r79 := (uext r78 32),r80 := (bv_shl r79 (0x1c :: [32])),r81 := (bv_or r70 r80),# 0x10010018: {ip => 0x1001001c\n              ;cr => r81},# 0x1c 0x1001001c: bc 12, 4*cr0+gt, 12,# 0x1001001c: bc 12, 4*cr0+gt, 12,r82 := (bv_shr r81 (0x1e :: [32])),r83 := (trunc r82 1),r84 := (eq r83 (0x1 :: [1])),r90 := (mux r84 (0x10010028) (0x10010020)),# 0x1001001c: {ip => r90\n              ;ctr => ctr_0}], stmtsTerm = ite r84\n{\n  \n  jump 0x10010028\n    { r3 = r65\n    , r4 = r67\n    , ip = 0x10010028\n    , cr = r81\n    }\n}\n{\n  \n  jump 0x10010020\n    { r3 = r65\n    , r4 = r67\n    , ip = 0x10010020\n    , cr = r81\n    }\n}, stmtsAbsState = registers:\n  { r1 = {rsp_0x10010000 + 0}\n  , r2 = finset {10038000}\n  , ip = code {0x10010000}\n  , lnk = return_addr\n  }\n}",Block (Address {addrSegmentBase = 0, addrSegmentOffset = 268500992, addrSegoffOffset = 32, addrPretty = "0x10010020"}) "StatementList {stmtsIdent = 0, stmtsNonterm = [# 0x0 0x10010020: ld r3, -24(r1),# 0x10010020: ld r3, -24(r1),r266 := (bv_add r1_0 (0xffffffffffffffe8 :: [64])),r267 := read_mem r266 (bvbe 8),# 0x10010020: {r3 => r267\n              ;ip => 0x10010024},# 0x4 0x10010024: std r3, -32(r1),# 0x10010024: std r3, -32(r1),r268 := (bv_add r1_0 (0xffffffffffffffe0 :: [64])),write_mem r268 r267,# 0x10010024: {ip => 0x10010028}], stmtsTerm = jump 0x10010028\n  { r3 = r267\n  , ip = 0x10010028\n  }, stmtsAbsState = registers:\n  { r1 = {rsp_0x10010000 + 0}\n  , r2 = finset {10038000}\n  , ip = code {0x10010020}\n  , lnk = return_addr\n  }\n}",Block (Address {addrSegmentBase = 0, addrSegmentOffset = 268500992, addrSegoffOffset = 40, addrPretty = "0x10010028"}) "StatementList {stmtsIdent = 0, stmtsNonterm = [# 0x0 0x10010028: addis r3, r2, 0,# 0x10010028: addis r3, r2, 0,# 0x10010028: {r3 => r2_0\n              ;ip => 0x1001002c},# 0x4 0x1001002c: ld r3, -32768(r3),# 0x1001002c: ld r3, -32768(r3),r235 := (bv_add r2_0 (0xffffffffffff8000 :: [64])),r236 := read_mem r235 (bvbe 8),# 0x1001002c: {r3 => r236\n              ;ip => 0x10010030},# 0x8 0x10010030: ld r4, -32(r1),# 0x10010030: ld r4, -32(r1),r237 := (bv_add r1_0 (0xffffffffffffffe0 :: [64])),r238 := read_mem r237 (bvbe 8),# 0x10010030: {r4 => r238\n              ;ip => 0x10010034},# 0xc 0x10010034: ld r3, 0(r3),# 0x10010034: ld r3, 0(r3),r239 := read_mem r236 (bvbe 8),# 0x10010034: {r3 => r239\n              ;ip => 0x10010038},# 0x10 0x10010038: cmpd cr0, r4, r3,# 0x10010038: cmpd cr0, r4, r3,r240 := (bv_slt r238 r239),r241 := (bv_slt r239 r238),r242 := (bv_and cr_0 (0xfffffff :: [32])),r243 := (mux r241 (0x2 :: [3]) (0x1 :: [3])),r244 := (mux r240 (0x4 :: [3]) r243),r245 := (bv_shr xer_0 (0x1f :: [64])),r246 := (trunc r245 1),r247 := (uext r244 4),r248 := (uext r246 4),r249 := (bv_shl r247 (0x1 :: [4])),r250 := (bv_or r249 r248),r251 := (uext r250 32),r252 := (bv_shl r251 (0x1c :: [32])),r253 := (bv_or r242 r252),# 0x10010038: {ip => 0x1001003c\n              ;cr => r253},# 0x14 0x1001003c: bc 12, 4*cr0+gt, 20,# 0x1001003c: bc 12, 4*cr0+gt, 20,r254 := (bv_shr r253 (0x1e :: [32])),r255 := (trunc r254 1),r256 := (eq r255 (0x1 :: [1])),r262 := (mux r256 (0x10010050) (0x10010040)),# 0x1001003c: {ip => r262\n              ;ctr => ctr_0}], stmtsTerm = ite r256\n{\n  \n  jump 0x10010050\n    { r3 = r239\n    , r4 = r238\n    , ip = 0x10010050\n    , cr = r253\n    }\n}\n{\n  \n  jump 0x10010040\n    { r3 = r239\n    , r4 = r238\n    , ip = 0x10010040\n    , cr = r253\n    }\n}, stmtsAbsState = registers:\n  { r1 = {rsp_0x10010000 + 0}\n  , r2 = finset {10038000}\n  , ip = code {0x10010028}\n  , lnk = return_addr\n  }\n}",Block (Address {addrSegmentBase = 0, addrSegmentOffset = 268500992, addrSegoffOffset = 64, addrPretty = "0x10010040"}) "StatementList {stmtsIdent = 0, stmtsNonterm = [# 0x0 0x10010040: addis r3, r2, 0,# 0x10010040: addis r3, r2, 0,# 0x10010040: {r3 => r2_0\n              ;ip => 0x10010044},# 0x4 0x10010044: ld r3, -32768(r3),# 0x10010044: ld r3, -32768(r3),r307 := (bv_add r2_0 (0xffffffffffff8000 :: [64])),r308 := read_mem r307 (bvbe 8),# 0x10010044: {r3 => r308\n              ;ip => 0x10010048},# 0x8 0x10010048: ld r3, 0(r3),# 0x10010048: ld r3, 0(r3),r309 := read_mem r308 (bvbe 8),# 0x10010048: {r3 => r309\n              ;ip => 0x1001004c},# 0xc 0x1001004c: std r3, -32(r1),# 0x1001004c: std r3, -32(r1),r310 := (bv_add r1_0 (0xffffffffffffffe0 :: [64])),write_mem r310 r309,# 0x1001004c: {ip => 0x10010050}], stmtsTerm = jump 0x10010050\n  { r3 = r309\n  , ip = 0x10010050\n  }, stmtsAbsState = registers:\n  { r1 = {rsp_0x10010000 + 0}\n  , r2 = finset {10038000}\n  , ip = code {0x10010040}\n  , lnk = return_addr\n  }\n}",Block (Address {addrSegmentBase = 0, addrSegmentOffset = 268500992, addrSegoffOffset = 80, addrPretty = "0x10010050"}) "StatementList {stmtsIdent = 0, stmtsNonterm = [# 0x0 0x10010050: ld r3, -32(r1),# 0x10010050: ld r3, -32(r1),r297 := (bv_add r1_0 (0xffffffffffffffe0 :: [64])),r298 := read_mem r297 (bvbe 8),# 0x10010050: {r3 => r298\n              ;ip => 0x10010054},# 0x4 0x10010054: blr,# 0x10010054: blr,r299 := (bv_shr lnk_0 (0x2 :: [64])),r300 := (trunc r299 62),r301 := (uext r300 64),r302 := (bv_shl r301 (0x2 :: [64])),# 0x10010054: {ip => r302}], stmtsTerm = return\n  { r3 = r298\n  , ip = r302\n  }, stmtsAbsState = registers:\n  { r1 = {rsp_0x10010000 + 0}\n  , r2 = finset {10038000}\n  , ip = code {0x10010050}\n  , lnk = return_addr\n  }\n}"],Function (Address {addrSegmentBase = 0, addrSegmentOffset = 268500992, addrSegoffOffset = 100, addrPretty = "0x10010064"}) [Block (Address {addrSegmentBase = 0, addrSegmentOffset = 268500992, addrSegoffOffset = 100, addrPretty = "0x10010064"}) "StatementList {stmtsIdent = 0, stmtsNonterm = [# 0x0 0x10010064: mflr r0,# 0x10010064: mflr r0,# 0x10010064: {r0 => lnk_0\n              ;ip => 0x10010068},# 0x4 0x10010068: std r31, -8(r1),# 0x10010068: std r31, -8(r1),r4 := (bv_add r1_0 (0xfffffffffffffff8 :: [64])),write_mem r4 r31_0,# 0x10010068: {ip => 0x1001006c},# 0x8 0x1001006c: std r0, 16(r1),# 0x1001006c: std r0, 16(r1),r5 := (bv_add r1_0 (0x10 :: [64])),write_mem r5 lnk_0,# 0x1001006c: {ip => 0x10010070},# 0xc 0x10010070: stdu r1, -128(r1),# 0x10010070: stdu r1, -128(r1),r6 := (bv_add r1_0 (0xffffffffffffff80 :: [64])),write_mem r6 r1_0,# 0x10010070: {r1 => r6\n              ;ip => 0x10010074},# 0x10 0x10010074: or r31, r1, r1,# 0x10010074: or r31, r1, r1,# 0x10010074: {r31 => r6\n              ;ip => 0x10010078},# 0x14 0x10010078: li r3, 3,# 0x10010078: li r3, 3,# 0x10010078: {r3 => 0x3 :: [64]\n              ;ip => 0x1001007c},# 0x18 0x1001007c: li r4, 4,# 0x1001007c: li r4, 4,# 0x1001007c: {r4 => 0x4 :: [64]\n              ;ip => 0x10010080},# 0x1c 0x10010080: bl 65408,# 0x10010080: bl 65408,# 0x10010080: {ip => 0x10020000\n              ;lnk => 0x10010084}], stmtsTerm = call and return to 0x10010084\n  { r0 = lnk_0\n  , r1 = r6\n  , r3 = 0x3 :: [64]\n  , r4 = 0x4 :: [64]\n  , r31 = r6\n  , ip = 0x10020000\n  , lnk = 0x10010084\n  }, stmtsAbsState = registers:\n  { r1 = {rsp_0x10010064 + 0}\n  , r2 = finset {10038000}\n  , ip = code {0x10010064}\n  , lnk = return_addr\n  }\nstack:\n  0x10 := return_addr\n  -0x80 := {rsp_0x10010064 + 0}}",Block (Address {addrSegmentBase = 0, addrSegmentOffset = 268500992, addrSegoffOffset = 132, addrPretty = "0x10010084"}) "StatementList {stmtsIdent = 0, stmtsNonterm = [# 0x0 0x10010084: nop,# 0x10010084: nop,# 0x10010084: {ip => 0x10010088},# 0x4 0x10010088: std r3, 112(r31),# 0x10010088: std r3, 112(r31),r18 := (bv_add r31_0 (0x70 :: [64])),write_mem r18 r3_0,# 0x10010088: {ip => 0x1001008c},# 0x8 0x1001008c: addi r1, r1, 128,# 0x1001008c: addi r1, r1, 128,r19 := (bv_add r1_0 (0x80 :: [64])),# 0x1001008c: {r1 => r19\n              ;ip => 0x10010090},# 0xc 0x10010090: ld r0, 16(r1),# 0x10010090: ld r0, 16(r1),r20 := (bv_add r1_0 (0x90 :: [64])),r21 := read_mem r20 (bvbe 8),# 0x10010090: {r0 => r21\n              ;ip => 0x10010094},# 0x10 0x10010094: ld r31, -8(r1),# 0x10010094: ld r31, -8(r1),r22 := (bv_add r1_0 (0x78 :: [64])),r23 := read_mem r22 (bvbe 8),# 0x10010094: {r31 => r23\n              ;ip => 0x10010098},# 0x14 0x10010098: mtlr r0,# 0x10010098: mtlr r0,# 0x10010098: {ip => 0x1001009c\n              ;lnk => r21},# 0x18 0x1001009c: blr,# 0x1001009c: blr,r24 := (bv_shr r21 (0x2 :: [64])),r25 := (trunc r24 62),r26 := (uext r25 64),r27 := (bv_shl r26 (0x2 :: [64])),# 0x1001009c: {ip => r27}], stmtsTerm = return\n  { r0 = r21\n  , r1 = r19\n  , r31 = r23\n  , ip = r27\n  , lnk = r21\n  }, stmtsAbsState = registers:\n  { r1 = {rsp_0x10010064 - 80}\n  , r31 = {rsp_0x10010064 - 80}\n  , ip = code {0x10010084}\n  }\nstack:\n  0x10 := return_addr\n  -0x80 := {rsp_0x10010064 + 0}}"]]}