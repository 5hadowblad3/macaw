Expected {expBinaryName = "tests/samples/looping.ppc.exe", expEntryPoints = [EntryPoint (Address {addrSegmentBase = 0, addrSegmentOffset = 268500992, addrSegoffOffset = 300, addrPretty = "0x1001012c"}),EntryPoint (Address {addrSegmentBase = 0, addrSegmentOffset = 268500992, addrSegoffOffset = 0, addrPretty = "0x10010000"}),EntryPoint (Address {addrSegmentBase = 0, addrSegmentOffset = 268500992, addrSegoffOffset = 228, addrPretty = "0x100100e4"}),EntryPoint (Address {addrSegmentBase = 0, addrSegmentOffset = 268500992, addrSegoffOffset = 300, addrPretty = "0x1001012c"})], expFunctions = [Function (Address {addrSegmentBase = 0, addrSegmentOffset = 268500992, addrSegoffOffset = 0, addrPretty = "0x10010000"}) [Block (Address {addrSegmentBase = 0, addrSegmentOffset = 268500992, addrSegoffOffset = 0, addrPretty = "0x10010000"}) "StatementList {stmtsIdent = 0, stmtsNonterm = [# 0x0 0x10010000: mflr r0,# 0x10010000: mflr r0,# 0x10010000: {r0 => lnk_0\n              ;ip => 0x10010004},# 0x4 0x10010004: std r31, -8(r1),# 0x10010004: std r31, -8(r1),r58 := (bv_add r1_0 (0xfffffffffffffff8 :: [64])),write_mem r58 r31_0,# 0x10010004: {ip => 0x10010008},# 0x8 0x10010008: std r0, 16(r1),# 0x10010008: std r0, 16(r1),r59 := (bv_add r1_0 (0x10 :: [64])),write_mem r59 lnk_0,# 0x10010008: {ip => 0x1001000c},# 0xc 0x1001000c: stdu r1, -176(r1),# 0x1001000c: stdu r1, -176(r1),r60 := (bv_add r1_0 (0xffffffffffffff50 :: [64])),write_mem r60 r1_0,# 0x1001000c: {r1 => r60\n              ;ip => 0x10010010},# 0x10 0x10010010: or r31, r1, r1,# 0x10010010: or r31, r1, r1,# 0x10010010: {r31 => r60\n              ;ip => 0x10010014},# 0x14 0x10010014: std r3, 152(r31),# 0x10010014: std r3, 152(r31),r61 := (bv_add r1_0 (0xffffffffffffffe8 :: [64])),write_mem r61 r3_0,# 0x10010014: {ip => 0x10010018},# 0x18 0x10010018: std r4, 144(r31),# 0x10010018: std r4, 144(r31),r62 := (bv_add r1_0 (0xffffffffffffffe0 :: [64])),write_mem r62 r4_0,# 0x10010018: {ip => 0x1001001c},# 0x1c 0x1001001c: ld r3, 152(r31),# 0x1001001c: ld r3, 152(r31),r63 := (bv_add r1_0 (0xffffffffffffffe8 :: [64])),r64 := read_mem r63 (bvbe 8),# 0x1001001c: {r3 => r64\n              ;ip => 0x10010020},# 0x20 0x10010020: cmpdi cr0, r3, 0,# 0x10010020: cmpdi cr0, r3, 0,r65 := (bv_slt r64 (0x0 :: [64])),r66 := (bv_slt (0x0 :: [64]) r64),r67 := (bv_and cr_0 (0xfffffff :: [32])),r68 := (mux r66 (0x2 :: [3]) (0x1 :: [3])),r69 := (mux r65 (0x4 :: [3]) r68),r70 := (bv_shr xer_0 (0x1f :: [64])),r71 := (trunc r70 1),r72 := (uext r69 4),r73 := (uext r71 4),r74 := (bv_shl r72 (0x1 :: [4])),r75 := (bv_or r74 r73),r76 := (uext r75 32),r77 := (bv_shl r76 (0x1c :: [32])),r78 := (bv_or r67 r77),# 0x10010020: {ip => 0x10010024\n              ;cr => r78},# 0x24 0x10010024: bc 4, 4*cr0+eq, 16,# 0x10010024: bc 4, 4*cr0+eq, 16,r79 := (bv_shr r78 (0x1d :: [32])),r80 := (trunc r79 1),r81 := (eq r80 (0x1 :: [1])),r87 := (mux r81 (0x10010028) (0x10010034)),# 0x10010024: {ip => r87\n              ;ctr => ctr_0}], stmtsTerm = ite r81\n{\n  \n  jump 0x10010028\n    { r0 = lnk_0\n    , r1 = r60\n    , r3 = r64\n    , r31 = r60\n    , ip = 0x10010028\n    , cr = r78\n    }\n}\n{\n  \n  jump 0x10010034\n    { r0 = lnk_0\n    , r1 = r60\n    , r3 = r64\n    , r31 = r60\n    , ip = 0x10010034\n    , cr = r78\n    }\n}, stmtsAbsState = registers:\n  { r1 = {rsp_0x10010000 + 0}\n  , r2 = finset {10038000}\n  , ip = code {0x10010000}\n  , lnk = return_addr\n  }\nstack:\n  0x10 := return_addr\n  -0xb0 := {rsp_0x10010000 + 0}}",Block (Address {addrSegmentBase = 0, addrSegmentOffset = 268500992, addrSegoffOffset = 40, addrPretty = "0x10010028"}) "StatementList {stmtsIdent = 0, stmtsNonterm = [# 0x0 0x10010028: ld r3, 144(r31),# 0x10010028: ld r3, 144(r31),r91 := (bv_add r31_0 (0x90 :: [64])),r92 := read_mem r91 (bvbe 8),# 0x10010028: {r3 => r92\n              ;ip => 0x1001002c},# 0x4 0x1001002c: std r3, 160(r31),# 0x1001002c: std r3, 160(r31),r93 := (bv_add r31_0 (0xa0 :: [64])),write_mem r93 r92,# 0x1001002c: {ip => 0x10010030},# 0x8 0x10010030: b 144,# 0x10010030: b 144,# 0x10010030: {ip => 0x100100c0}], stmtsTerm = jump 0x100100c0\n  { r3 = r92\n  , ip = 0x100100c0\n  }, stmtsAbsState = registers:\n  { r0 = return_addr\n  , r1 = {rsp_0x10010000 - b0}\n  , r2 = finset {10038000}\n  , r31 = {rsp_0x10010000 - b0}\n  , ip = code {0x10010028}\n  , lnk = return_addr\n  }\nstack:\n  0x10 := return_addr\n  -0xb0 := {rsp_0x10010000 + 0}}",Block (Address {addrSegmentBase = 0, addrSegmentOffset = 268500992, addrSegoffOffset = 52, addrPretty = "0x10010034"}) "StatementList {stmtsIdent = 0, stmtsNonterm = [# 0x0 0x10010034: li r3, 0,# 0x10010034: li r3, 0,# 0x10010034: {r3 => 0x0 :: [64]\n              ;ip => 0x10010038},# 0x4 0x10010038: stw r3, 140(r31),# 0x10010038: stw r3, 140(r31),r471 := (bv_add r31_0 (0x8c :: [64])),write_mem r471 0x0 :: [32],# 0x10010038: {ip => 0x1001003c}], stmtsTerm = jump 0x1001003c\n  { r3 = 0x0 :: [64]\n  , ip = 0x1001003c\n  }, stmtsAbsState = registers:\n  { r0 = return_addr\n  , r1 = {rsp_0x10010000 - b0}\n  , r2 = finset {10038000}\n  , r31 = {rsp_0x10010000 - b0}\n  , ip = code {0x10010034}\n  , lnk = return_addr\n  }\nstack:\n  0x10 := return_addr\n  -0x24 := finset {0}\n  -0xb0 := {rsp_0x10010000 + 0}}",Block (Address {addrSegmentBase = 0, addrSegmentOffset = 268500992, addrSegoffOffset = 60, addrPretty = "0x1001003c"}) "StatementList {stmtsIdent = 0, stmtsNonterm = [# 0x0 0x1001003c: lwa r3, 140(r31),# 0x1001003c: lwa r3, 140(r31),r1538 := (bv_add r31_0 (0x8c :: [64])),r1539 := read_mem r1538 (bvbe 4),r1540 := (sext r1539 64),# 0x1001003c: {r3 => r1540\n              ;ip => 0x10010040},# 0x4 0x10010040: ld r4, 152(r31),# 0x10010040: ld r4, 152(r31),r1541 := (bv_add r31_0 (0x98 :: [64])),r1542 := read_mem r1541 (bvbe 8),# 0x10010040: {r4 => r1542\n              ;ip => 0x10010044},# 0x8 0x10010044: cmpdi cr0, r4, 6,# 0x10010044: cmpdi cr0, r4, 6,r1543 := (bv_slt r1542 (0x6 :: [64])),r1544 := (bv_slt (0x6 :: [64]) r1542),r1545 := (bv_and cr_0 (0xfffffff :: [32])),r1546 := (mux r1544 (0x2 :: [3]) (0x1 :: [3])),r1547 := (mux r1543 (0x4 :: [3]) r1546),r1548 := (bv_shr xer_0 (0x1f :: [64])),r1549 := (trunc r1548 1),r1550 := (uext r1547 4),r1551 := (uext r1549 4),r1552 := (bv_shl r1550 (0x1 :: [4])),r1553 := (bv_or r1552 r1551),r1554 := (uext r1553 32),r1555 := (bv_shl r1554 (0x1c :: [32])),r1556 := (bv_or r1545 r1555),# 0x10010044: {ip => 0x10010048\n              ;cr => r1556},# 0xc 0x10010048: std r3, 128(r31),# 0x10010048: std r3, 128(r31),r1557 := (bv_add r31_0 (0x80 :: [64])),write_mem r1557 r1540,# 0x10010048: {ip => 0x1001004c},# 0x10 0x1001004c: bc 4, 4*cr0+lt, 16,# 0x1001004c: bc 4, 4*cr0+lt, 16,r1558 := (bv_shr r1556 (0x1f :: [32])),r1559 := (trunc r1558 1),r1560 := (eq r1559 (0x1 :: [1])),r1566 := (mux r1560 (0x10010050) (0x1001005c)),# 0x1001004c: {ip => r1566\n              ;ctr => ctr_0}], stmtsTerm = ite r1560\n{\n  \n  jump 0x10010050\n    { r3 = r1540\n    , r4 = r1542\n    , ip = 0x10010050\n    , cr = r1556\n    }\n}\n{\n  \n  jump 0x1001005c\n    { r3 = r1540\n    , r4 = r1542\n    , ip = 0x1001005c\n    , cr = r1556\n    }\n}, stmtsAbsState = registers:\n  { r0 = return_addr\n  , r1 = {rsp_0x10010000 - b0}\n  , r2 = finset {10038000}\n  , r31 = {rsp_0x10010000 - b0}\n  , ip = code {0x1001003c}\n  , lnk = return_addr\n  }\nstack:\n  0x10 := return_addr\n  -0xb0 := {rsp_0x10010000 + 0}}",Block (Address {addrSegmentBase = 0, addrSegmentOffset = 268500992, addrSegoffOffset = 80, addrPretty = "0x10010050"}) "StatementList {stmtsIdent = 0, stmtsNonterm = [# 0x0 0x10010050: ld r3, 152(r31),# 0x10010050: ld r3, 152(r31),r1570 := (bv_add r31_0 (0x98 :: [64])),r1571 := read_mem r1570 (bvbe 8),# 0x10010050: {r3 => r1571\n              ;ip => 0x10010054},# 0x4 0x10010054: std r3, 120(r31),# 0x10010054: std r3, 120(r31),r1572 := (bv_add r31_0 (0x78 :: [64])),write_mem r1572 r1571,# 0x10010054: {ip => 0x10010058},# 0x8 0x10010058: b 16,# 0x10010058: b 16,# 0x10010058: {ip => 0x10010068}], stmtsTerm = jump 0x10010068\n  { r3 = r1571\n  , ip = 0x10010068\n  }, stmtsAbsState = registers:\n  { r0 = return_addr\n  , r1 = {rsp_0x10010000 - b0}\n  , r2 = finset {10038000}\n  , r31 = {rsp_0x10010000 - b0}\n  , ip = code {0x10010050}\n  , lnk = return_addr\n  }\nstack:\n  0x10 := return_addr\n  -0xb0 := {rsp_0x10010000 + 0}}",Block (Address {addrSegmentBase = 0, addrSegmentOffset = 268500992, addrSegoffOffset = 92, addrPretty = "0x1001005c"}) "StatementList {stmtsIdent = 0, stmtsNonterm = [# 0x0 0x1001005c: li r3, 6,# 0x1001005c: li r3, 6,# 0x1001005c: {r3 => 0x6 :: [64]\n              ;ip => 0x10010060},# 0x4 0x10010060: std r3, 120(r31),# 0x10010060: std r3, 120(r31),r1574 := (bv_add r31_0 (0x78 :: [64])),write_mem r1574 0x6 :: [64],# 0x10010060: {ip => 0x10010064},# 0x8 0x10010064: b 4,# 0x10010064: b 4,# 0x10010064: {ip => 0x10010068}], stmtsTerm = jump 0x10010068\n  { r3 = 0x6 :: [64]\n  , ip = 0x10010068\n  }, stmtsAbsState = registers:\n  { r0 = return_addr\n  , r1 = {rsp_0x10010000 - b0}\n  , r2 = finset {10038000}\n  , r31 = {rsp_0x10010000 - b0}\n  , ip = code {0x1001005c}\n  , lnk = return_addr\n  }\nstack:\n  0x10 := return_addr\n  -0x38 := finset {6}\n  -0xb0 := {rsp_0x10010000 + 0}}",Block (Address {addrSegmentBase = 0, addrSegmentOffset = 268500992, addrSegoffOffset = 104, addrPretty = "0x10010068"}) "StatementList {stmtsIdent = 0, stmtsNonterm = [# 0x0 0x10010068: ld r3, 120(r31),# 0x10010068: ld r3, 120(r31),r1629 := (bv_add r31_0 (0x78 :: [64])),r1630 := read_mem r1629 (bvbe 8),# 0x10010068: {r3 => r1630\n              ;ip => 0x1001006c},# 0x4 0x1001006c: ld r4, 128(r31),# 0x1001006c: ld r4, 128(r31),r1631 := (bv_add r31_0 (0x80 :: [64])),r1632 := read_mem r1631 (bvbe 8),# 0x1001006c: {r4 => r1632\n              ;ip => 0x10010070},# 0x8 0x10010070: cmpd cr0, r4, r3,# 0x10010070: cmpd cr0, r4, r3,r1633 := (bv_slt r1632 r1630),r1634 := (bv_slt r1630 r1632),r1635 := (bv_and cr_0 (0xfffffff :: [32])),r1636 := (mux r1634 (0x2 :: [3]) (0x1 :: [3])),r1637 := (mux r1633 (0x4 :: [3]) r1636),r1638 := (bv_shr xer_0 (0x1f :: [64])),r1639 := (trunc r1638 1),r1640 := (uext r1637 4),r1641 := (uext r1639 4),r1642 := (bv_shl r1640 (0x1 :: [4])),r1643 := (bv_or r1642 r1641),r1644 := (uext r1643 32),r1645 := (bv_shl r1644 (0x1c :: [32])),r1646 := (bv_or r1635 r1645),# 0x10010070: {ip => 0x10010074\n              ;cr => r1646},# 0xc 0x10010074: bc 4, 4*cr0+lt, 40,# 0x10010074: bc 4, 4*cr0+lt, 40,r1647 := (bv_shr r1646 (0x1f :: [32])),r1648 := (trunc r1647 1),r1649 := (eq r1648 (0x1 :: [1])),r1655 := (mux r1649 (0x10010078) (0x1001009c)),# 0x10010074: {ip => r1655\n              ;ctr => ctr_0}], stmtsTerm = ite r1649\n{\n  \n  jump 0x10010078\n    { r3 = r1630\n    , r4 = r1632\n    , ip = 0x10010078\n    , cr = r1646\n    }\n}\n{\n  \n  jump 0x1001009c\n    { r3 = r1630\n    , r4 = r1632\n    , ip = 0x1001009c\n    , cr = r1646\n    }\n}, stmtsAbsState = registers:\n  { r0 = return_addr\n  , r1 = {rsp_0x10010000 - b0}\n  , r2 = finset {10038000}\n  , r31 = {rsp_0x10010000 - b0}\n  , ip = code {0x10010068}\n  , lnk = return_addr\n  }\nstack:\n  0x10 := return_addr\n  -0xb0 := {rsp_0x10010000 + 0}}",Block (Address {addrSegmentBase = 0, addrSegmentOffset = 268500992, addrSegoffOffset = 120, addrPretty = "0x10010078"}) "StatementList {stmtsIdent = 0, stmtsNonterm = [# 0x0 0x10010078: ld r3, 144(r31),# 0x10010078: ld r3, 144(r31),r1671 := (bv_add r31_0 (0x90 :: [64])),r1672 := read_mem r1671 (bvbe 8),# 0x10010078: {r3 => r1672\n              ;ip => 0x1001007c},# 0x4 0x1001007c: addi r3, r3, 2,# 0x1001007c: addi r3, r3, 2,r1673 := (bv_add r1672 (0x2 :: [64])),# 0x1001007c: {r3 => r1673\n              ;ip => 0x10010080},# 0x8 0x10010080: std r3, 144(r31),# 0x10010080: std r3, 144(r31),r1674 := (bv_add r31_0 (0x90 :: [64])),write_mem r1674 r1673,# 0x10010080: {ip => 0x10010084},# 0xc 0x10010084: lwz r3, 140(r31),# 0x10010084: lwz r3, 140(r31),r1675 := (bv_add r31_0 (0x8c :: [64])),r1676 := read_mem r1675 (bvbe 4),r1677 := (uext r1676 64),# 0x10010084: {r3 => r1677\n              ;ip => 0x10010088},# 0x10 0x10010088: addi r3, r3, 1,# 0x10010088: addi r3, r3, 1,r1678 := (bv_add r1677 (0x1 :: [64])),# 0x10010088: {r3 => r1678\n              ;ip => 0x1001008c},# 0x14 0x1001008c: stw r3, 140(r31),# 0x1001008c: stw r3, 140(r31),r1679 := (bv_add r31_0 (0x8c :: [64])),r1680 := (trunc r1678 32),write_mem r1679 r1680,# 0x1001008c: {ip => 0x10010090},# 0x18 0x10010090: addi r3, r3, 1,# 0x10010090: addi r3, r3, 1,r1681 := (bv_add r1677 (0x2 :: [64])),# 0x10010090: {r3 => r1681\n              ;ip => 0x10010094},# 0x1c 0x10010094: stw r3, 140(r31),# 0x10010094: stw r3, 140(r31),r1682 := (bv_add r31_0 (0x8c :: [64])),r1683 := (trunc r1681 32),write_mem r1682 r1683,# 0x10010094: {ip => 0x10010098},# 0x20 0x10010098: b -92,# 0x10010098: b -92,# 0x10010098: {ip => 0x1001003c}], stmtsTerm = jump 0x1001003c\n  { r3 = r1681\n  , ip = 0x1001003c\n  }, stmtsAbsState = registers:\n  { r0 = return_addr\n  , r1 = {rsp_0x10010000 - b0}\n  , r2 = finset {10038000}\n  , r31 = {rsp_0x10010000 - b0}\n  , ip = code {0x10010078}\n  , lnk = return_addr\n  }\nstack:\n  0x10 := return_addr\n  -0xb0 := {rsp_0x10010000 + 0}}",Block (Address {addrSegmentBase = 0, addrSegmentOffset = 268500992, addrSegoffOffset = 156, addrPretty = "0x1001009c"}) "StatementList {stmtsIdent = 0, stmtsNonterm = [# 0x0 0x1001009c: ld r3, 152(r31),# 0x1001009c: ld r3, 152(r31),r1698 := (bv_add r31_0 (0x98 :: [64])),r1699 := read_mem r1698 (bvbe 8),# 0x1001009c: {r3 => r1699\n              ;ip => 0x100100a0},# 0x4 0x100100a0: lwa r4, 140(r31),# 0x100100a0: lwa r4, 140(r31),r1700 := (bv_add r31_0 (0x8c :: [64])),r1701 := read_mem r1700 (bvbe 4),r1702 := (sext r1701 64),# 0x100100a0: {r4 => r1702\n              ;ip => 0x100100a4},# 0x8 0x100100a4: subf r3, r4, r3,# 0x100100a4: subf r3, r4, r3,r1703 := (bv_complement r1702),r1704 := (bv_add r1703 (0x1 :: [64])),r1705 := (bv_add r1704 r1699),# 0x100100a4: {r3 => r1705\n              ;ip => 0x100100a8},# 0xc 0x100100a8: ld r4, 144(r31),# 0x100100a8: ld r4, 144(r31),r1706 := (bv_add r31_0 (0x90 :: [64])),r1707 := read_mem r1706 (bvbe 8),# 0x100100a8: {r4 => r1707\n              ;ip => 0x100100ac},# 0x10 0x100100ac: lwa r5, 140(r31),# 0x100100ac: lwa r5, 140(r31),r1708 := (bv_add r31_0 (0x8c :: [64])),r1709 := read_mem r1708 (bvbe 4),r1710 := (sext r1709 64),# 0x100100ac: {r5 => r1710\n              ;ip => 0x100100b0},# 0x14 0x100100b0: add r4, r4, r5,# 0x100100b0: add r4, r4, r5,r1711 := (bv_add r1710 r1707),# 0x100100b0: {r4 => r1711\n              ;ip => 0x100100b4},# 0x18 0x100100b4: bl 65356,# 0x100100b4: bl 65356,# 0x100100b4: {ip => 0x10020000\n              ;lnk => 0x100100b8}], stmtsTerm = call and return to 0x100100b8\n  { r3 = r1705\n  , r4 = r1711\n  , r5 = r1710\n  , ip = 0x10020000\n  , lnk = 0x100100b8\n  }, stmtsAbsState = registers:\n  { r0 = return_addr\n  , r1 = {rsp_0x10010000 - b0}\n  , r2 = finset {10038000}\n  , r31 = {rsp_0x10010000 - b0}\n  , ip = code {0x1001009c}\n  , lnk = return_addr\n  }\nstack:\n  0x10 := return_addr\n  -0xb0 := {rsp_0x10010000 + 0}}",Block (Address {addrSegmentBase = 0, addrSegmentOffset = 268500992, addrSegoffOffset = 184, addrPretty = "0x100100b8"}) "StatementList {stmtsIdent = 0, stmtsNonterm = [# 0x0 0x100100b8: nop,# 0x100100b8: nop,# 0x100100b8: {ip => 0x100100bc},# 0x4 0x100100bc: std r3, 160(r31),# 0x100100bc: std r3, 160(r31),r1761 := (bv_add r31_0 (0xa0 :: [64])),write_mem r1761 r3_0,# 0x100100bc: {ip => 0x100100c0}], stmtsTerm = jump 0x100100c0\n  { ip = 0x100100c0\n  }, stmtsAbsState = registers:\n  { r1 = {rsp_0x10010000 - b0}\n  , r31 = {rsp_0x10010000 - b0}\n  , ip = code {0x100100b8}\n  }\nstack:\n  0x10 := return_addr\n  -0xb0 := {rsp_0x10010000 + 0}}",Block (Address {addrSegmentBase = 0, addrSegmentOffset = 268500992, addrSegoffOffset = 192, addrPretty = "0x100100c0"}) "StatementList {stmtsIdent = 0, stmtsNonterm = [# 0x0 0x100100c0: ld r3, 160(r31),# 0x100100c0: ld r3, 160(r31),r1774 := (bv_add r31_0 (0xa0 :: [64])),r1775 := read_mem r1774 (bvbe 8),# 0x100100c0: {r3 => r1775\n              ;ip => 0x100100c4},# 0x4 0x100100c4: addi r1, r1, 176,# 0x100100c4: addi r1, r1, 176,r1776 := (bv_add r1_0 (0xb0 :: [64])),# 0x100100c4: {r1 => r1776\n              ;ip => 0x100100c8},# 0x8 0x100100c8: ld r0, 16(r1),# 0x100100c8: ld r0, 16(r1),r1777 := (bv_add r1_0 (0xc0 :: [64])),r1778 := read_mem r1777 (bvbe 8),# 0x100100c8: {r0 => r1778\n              ;ip => 0x100100cc},# 0xc 0x100100cc: ld r31, -8(r1),# 0x100100cc: ld r31, -8(r1),r1779 := (bv_add r1_0 (0xa8 :: [64])),r1780 := read_mem r1779 (bvbe 8),# 0x100100cc: {r31 => r1780\n              ;ip => 0x100100d0},# 0x10 0x100100d0: mtlr r0,# 0x100100d0: mtlr r0,# 0x100100d0: {ip => 0x100100d4\n              ;lnk => r1778},# 0x14 0x100100d4: blr,# 0x100100d4: blr,r1781 := (bv_shr r1778 (0x2 :: [64])),r1782 := (trunc r1781 62),r1783 := (uext r1782 64),r1784 := (bv_shl r1783 (0x2 :: [64])),# 0x100100d4: {ip => r1784}], stmtsTerm = return\n  { r0 = r1778\n  , r1 = r1776\n  , r3 = r1775\n  , r31 = r1780\n  , ip = r1784\n  , lnk = r1778\n  }, stmtsAbsState = registers:\n  { r1 = {rsp_0x10010000 - b0}\n  , r31 = {rsp_0x10010000 - b0}\n  , ip = code {0x100100c0}\n  }\nstack:\n  0x10 := return_addr\n  -0xb0 := {rsp_0x10010000 + 0}}"],Function (Address {addrSegmentBase = 0, addrSegmentOffset = 268500992, addrSegoffOffset = 228, addrPretty = "0x100100e4"}) [Block (Address {addrSegmentBase = 0, addrSegmentOffset = 268500992, addrSegoffOffset = 228, addrPretty = "0x100100e4"}) "StatementList {stmtsIdent = 0, stmtsNonterm = [# 0x0 0x100100e4: mflr r0,# 0x100100e4: mflr r0,# 0x100100e4: {r0 => lnk_0\n              ;ip => 0x100100e8},# 0x4 0x100100e8: std r31, -8(r1),# 0x100100e8: std r31, -8(r1),r7 := (bv_add r1_0 (0xfffffffffffffff8 :: [64])),write_mem r7 r31_0,# 0x100100e8: {ip => 0x100100ec},# 0x8 0x100100ec: std r0, 16(r1),# 0x100100ec: std r0, 16(r1),r8 := (bv_add r1_0 (0x10 :: [64])),write_mem r8 lnk_0,# 0x100100ec: {ip => 0x100100f0},# 0xc 0x100100f0: stdu r1, -128(r1),# 0x100100f0: stdu r1, -128(r1),r9 := (bv_add r1_0 (0xffffffffffffff80 :: [64])),write_mem r9 r1_0,# 0x100100f0: {r1 => r9\n              ;ip => 0x100100f4},# 0x10 0x100100f4: or r31, r1, r1,# 0x100100f4: or r31, r1, r1,# 0x100100f4: {r31 => r9\n              ;ip => 0x100100f8},# 0x14 0x100100f8: std r3, 112(r31),# 0x100100f8: std r3, 112(r31),r10 := (bv_add r1_0 (0xfffffffffffffff0 :: [64])),write_mem r10 r3_0,# 0x100100f8: {ip => 0x100100fc},# 0x18 0x100100fc: ld r3, 112(r31),# 0x100100fc: ld r3, 112(r31),r11 := (bv_add r1_0 (0xfffffffffffffff0 :: [64])),r12 := read_mem r11 (bvbe 8),# 0x100100fc: {r3 => r12\n              ;ip => 0x10010100},# 0x1c 0x10010100: li r4, 0,# 0x10010100: li r4, 0,# 0x10010100: {r4 => 0x0 :: [64]\n              ;ip => 0x10010104},# 0x20 0x10010104: bl 65276,# 0x10010104: bl 65276,# 0x10010104: {ip => 0x10020000\n              ;lnk => 0x10010108}], stmtsTerm = call and return to 0x10010108\n  { r0 = lnk_0\n  , r1 = r9\n  , r3 = r12\n  , r4 = 0x0 :: [64]\n  , r31 = r9\n  , ip = 0x10020000\n  , lnk = 0x10010108\n  }, stmtsAbsState = registers:\n  { r1 = {rsp_0x100100e4 + 0}\n  , r2 = finset {10038000}\n  , ip = code {0x100100e4}\n  , lnk = return_addr\n  }\nstack:\n  0x10 := return_addr\n  -0x80 := {rsp_0x100100e4 + 0}}",Block (Address {addrSegmentBase = 0, addrSegmentOffset = 268500992, addrSegoffOffset = 264, addrPretty = "0x10010108"}) "StatementList {stmtsIdent = 0, stmtsNonterm = [# 0x0 0x10010108: nop,# 0x10010108: nop,# 0x10010108: {ip => 0x1001010c},# 0x4 0x1001010c: addi r1, r1, 128,# 0x1001010c: addi r1, r1, 128,r23 := (bv_add r1_0 (0x80 :: [64])),# 0x1001010c: {r1 => r23\n              ;ip => 0x10010110},# 0x8 0x10010110: ld r0, 16(r1),# 0x10010110: ld r0, 16(r1),r24 := (bv_add r1_0 (0x90 :: [64])),r25 := read_mem r24 (bvbe 8),# 0x10010110: {r0 => r25\n              ;ip => 0x10010114},# 0xc 0x10010114: ld r31, -8(r1),# 0x10010114: ld r31, -8(r1),r26 := (bv_add r1_0 (0x78 :: [64])),r27 := read_mem r26 (bvbe 8),# 0x10010114: {r31 => r27\n              ;ip => 0x10010118},# 0x10 0x10010118: mtlr r0,# 0x10010118: mtlr r0,# 0x10010118: {ip => 0x1001011c\n              ;lnk => r25},# 0x14 0x1001011c: blr,# 0x1001011c: blr,r28 := (bv_shr r25 (0x2 :: [64])),r29 := (trunc r28 62),r30 := (uext r29 64),r31 := (bv_shl r30 (0x2 :: [64])),# 0x1001011c: {ip => r31}], stmtsTerm = return\n  { r0 = r25\n  , r1 = r23\n  , r31 = r27\n  , ip = r31\n  , lnk = r25\n  }, stmtsAbsState = registers:\n  { r1 = {rsp_0x100100e4 - 80}\n  , r31 = {rsp_0x100100e4 - 80}\n  , ip = code {0x10010108}\n  }\nstack:\n  0x10 := return_addr\n  -0x80 := {rsp_0x100100e4 + 0}}"],Function (Address {addrSegmentBase = 0, addrSegmentOffset = 268500992, addrSegoffOffset = 300, addrPretty = "0x1001012c"}) [Block (Address {addrSegmentBase = 0, addrSegmentOffset = 268500992, addrSegoffOffset = 300, addrPretty = "0x1001012c"}) "StatementList {stmtsIdent = 0, stmtsNonterm = [# 0x0 0x1001012c: mflr r0,# 0x1001012c: mflr r0,# 0x1001012c: {r0 => lnk_0\n              ;ip => 0x10010130},# 0x4 0x10010130: std r31, -8(r1),# 0x10010130: std r31, -8(r1),r4 := (bv_add r1_0 (0xfffffffffffffff8 :: [64])),write_mem r4 r31_0,# 0x10010130: {ip => 0x10010134},# 0x8 0x10010134: std r0, 16(r1),# 0x10010134: std r0, 16(r1),r5 := (bv_add r1_0 (0x10 :: [64])),write_mem r5 lnk_0,# 0x10010134: {ip => 0x10010138},# 0xc 0x10010138: stdu r1, -128(r1),# 0x10010138: stdu r1, -128(r1),r6 := (bv_add r1_0 (0xffffffffffffff80 :: [64])),write_mem r6 r1_0,# 0x10010138: {r1 => r6\n              ;ip => 0x1001013c},# 0x10 0x1001013c: or r31, r1, r1,# 0x1001013c: or r31, r1, r1,# 0x1001013c: {r31 => r6\n              ;ip => 0x10010140},# 0x14 0x10010140: li r3, 3,# 0x10010140: li r3, 3,# 0x10010140: {r3 => 0x3 :: [64]\n              ;ip => 0x10010144},# 0x18 0x10010144: li r4, 4,# 0x10010144: li r4, 4,# 0x10010144: {r4 => 0x4 :: [64]\n              ;ip => 0x10010148},# 0x1c 0x10010148: bl 65208,# 0x10010148: bl 65208,# 0x10010148: {ip => 0x10020000\n              ;lnk => 0x1001014c}], stmtsTerm = call and return to 0x1001014c\n  { r0 = lnk_0\n  , r1 = r6\n  , r3 = 0x3 :: [64]\n  , r4 = 0x4 :: [64]\n  , r31 = r6\n  , ip = 0x10020000\n  , lnk = 0x1001014c\n  }, stmtsAbsState = registers:\n  { r1 = {rsp_0x1001012c + 0}\n  , r2 = finset {10038000}\n  , ip = code {0x1001012c}\n  , lnk = return_addr\n  }\nstack:\n  0x10 := return_addr\n  -0x80 := {rsp_0x1001012c + 0}}",Block (Address {addrSegmentBase = 0, addrSegmentOffset = 268500992, addrSegoffOffset = 332, addrPretty = "0x1001014c"}) "StatementList {stmtsIdent = 0, stmtsNonterm = [# 0x0 0x1001014c: nop,# 0x1001014c: nop,# 0x1001014c: {ip => 0x10010150},# 0x4 0x10010150: std r3, 112(r31),# 0x10010150: std r3, 112(r31),r18 := (bv_add r31_0 (0x70 :: [64])),write_mem r18 r3_0,# 0x10010150: {ip => 0x10010154},# 0x8 0x10010154: addi r1, r1, 128,# 0x10010154: addi r1, r1, 128,r19 := (bv_add r1_0 (0x80 :: [64])),# 0x10010154: {r1 => r19\n              ;ip => 0x10010158},# 0xc 0x10010158: ld r0, 16(r1),# 0x10010158: ld r0, 16(r1),r20 := (bv_add r1_0 (0x90 :: [64])),r21 := read_mem r20 (bvbe 8),# 0x10010158: {r0 => r21\n              ;ip => 0x1001015c},# 0x10 0x1001015c: ld r31, -8(r1),# 0x1001015c: ld r31, -8(r1),r22 := (bv_add r1_0 (0x78 :: [64])),r23 := read_mem r22 (bvbe 8),# 0x1001015c: {r31 => r23\n              ;ip => 0x10010160},# 0x14 0x10010160: mtlr r0,# 0x10010160: mtlr r0,# 0x10010160: {ip => 0x10010164\n              ;lnk => r21},# 0x18 0x10010164: blr,# 0x10010164: blr,r24 := (bv_shr r21 (0x2 :: [64])),r25 := (trunc r24 62),r26 := (uext r25 64),r27 := (bv_shl r26 (0x2 :: [64])),# 0x10010164: {ip => r27}], stmtsTerm = return\n  { r0 = r21\n  , r1 = r19\n  , r31 = r23\n  , ip = r27\n  , lnk = r21\n  }, stmtsAbsState = registers:\n  { r1 = {rsp_0x1001012c - 80}\n  , r31 = {rsp_0x1001012c - 80}\n  , ip = code {0x1001014c}\n  }\nstack:\n  0x10 := return_addr\n  -0x80 := {rsp_0x1001012c + 0}}"]]}